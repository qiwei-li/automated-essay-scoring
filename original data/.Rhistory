x11()
grid = createBMLGrid(r = 89, c = 144, density=0.3)
runBMLGrid(grid, numSteps = 500)
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/BML functions.R')
grid = createBMLGrid(r = 89, c = 144, density=0.3)
runBMLGrid(grid, numSteps = 500)
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/BML functions.R')
grid = createBMLGrid(r = 89, c = 144, density=0.3)
runBMLGrid(grid, numSteps = 500)
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/BML functions.R')
grid = createBMLGrid(r = 89, c = 144, density=0.3)
runBMLGrid(grid, numSteps = 500)
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/BML functions.R')
par(mfrow=c(2,2))
par(mar=c(1,1,1,1))
g = createBMLGrid(r=4,c=6,density=0.5)
plotBMLGrid(g)
plotBMLGrid(moveBlue.simul(g))
plotBMLGrid(moveRed.simul(moveBlue.simul(g)))
plotBMLGrid(move.simul(g))
grid = createBMLGrid(r = 89, c = 144, density=0.3)
runBMLGrid(grid, numSteps = 500)
runBMLGrid = function(grid, numSteps){
x11()
for(i in 1:numSteps){
grid = move.simul(grid)
plotBMLGrid(grid)
cat("                               \r")
cat("step: ", i,"\r")
}
}
runBMLGrid
runBMLGrid(g,1)
grid = createBMLGrid(r = 89, c = 144, density=0.3)
runBMLGrid(grid, numSteps = 500)
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/BML functions.R')
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
grid = createBMLGrid(r = 200, c = 600, density=0.3)
plotBMLGrid(grid, ifadd = FALSE)
runBMLGrid(grid, numSteps = 250, ifPlot=TRUE)
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
grid = createBMLGrid(r = 200, c = 600, density=0.3)
runBMLGrid(grid, numSteps = 250, ifPlot=TRUE)
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
grid = createBMLGrid(r = 200, c = 600, density=0.3)
runBMLGrid(grid, numSteps = 250, ifPlot=TRUE)
?x11
?dev.new
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
grid = createBMLGrid(r = 200, c = 600, density=0.3)
runBMLGrid(grid, numSteps = 50, ifPlot=TRUE)
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
grid = createBMLGrid(r = 200, c = 600, density=0.3)
runBMLGrid(grid, numSteps = 50, ifPlot=TRUE)
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
grid = createBMLGrid(r = 200, c = 600, density=0.3)
runBMLGrid(grid, numSteps = 50, ifPlot=TRUE)
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
grid = createBMLGrid(r = 200, c = 600, density=0.3)
runBMLGrid(grid, numSteps = 50, ifPlot=TRUE)
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
grid = createBMLGrid(r = 200, c = 600, density=0.3)
runBMLGrid(grid, numSteps = 50, ifPlot=TRUE)
grid = createBMLGrid(r = 89, c = 127, density=0.3)
runBMLGrid(grid, numSteps = 50, ifPlot=TRUE)
runBMLGrid(grid, numSteps = 200, ifPlot=TRUE)
runBMLGrid(grid, numSteps = 2000, ifPlot=TRUE)
ls()
remove.packages(bml)
remove.packages('bml')
library(bml)
grid = createBMLGrid(r = 89, c = 127, density=0.45)
grid = createBMLGrid(r = 89, c = 127, density=0.38)
runBMLGrid(grid, numSteps = 100, ifPlot=TRUE)
grid = createBMLGrid(r = 89, c = 127, density=0.18)
runBMLGrid(grid, numSteps = 100, ifPlot=TRUE)
grid = createBMLGrid(r = 89, c = 127, density=0.6)
runBMLGrid(grid, numSteps = 500, ifPlot=TRUE)
grid = createBMLGrid(r = 89, c = 127, density=0.18)
runBMLGrid(grid, numSteps = 100, ifPlot=TRUE)
grid = createBMLGrid(r = 89, c = 127, density=0.38)
runBMLGrid(grid, numSteps = 100, ifPlot=TRUE)
grid = createBMLGrid(r = 89, c = 127, density=0.30)
runBMLGrid(grid, numSteps = 100, ifPlot=TRUE)
grid = createBMLGrid(r = 89, c = 127, density=0.45)
runBMLGrid(grid, numSteps = 200, ifPlot=TRUE)
grid = createBMLGrid(r = 89, c = 127, density=0.28)
runBMLGrid(grid, numSteps = 200, ifPlot=TRUE)
grid = createBMLGrid(r = 89, c = 127, density=0.35)
runBMLGrid(grid, numSteps = 200, ifPlot=TRUE)
grid = createBMLGrid(r = 89, c = 127, density=0.32)
runBMLGrid(grid, numSteps = 200, ifPlot=TRUE)
grid = createBMLGrid(r = 89, c = 127, density=0.34)
runBMLGrid(grid, numSteps = 200, ifPlot=FALSE)
grid = createBMLGrid(r = 89, c = 127, density=0.35)
runBMLGrid(grid, numSteps = 200, ifPlot=FALSE)
grid = createBMLGrid(r = 89, c = 127, density=0.36)
runBMLGrid(grid, numSteps = 200, ifPlot=FALSE)
grid = createBMLGrid(r = 89, c = 127, density=0.37)
runBMLGrid(grid, numSteps = 200, ifPlot=FALSE)
grid = createBMLGrid(r = 89, c = 127, density=0.39)
runBMLGrid(grid, numSteps = 200, ifPlot=FALSE)
grid = createBMLGrid(r = 20, c = 127, density=0.39)
runBMLGrid(grid, numSteps = 200, ifPlot=FALSE)
grid = createBMLGrid(r = 20, c = 127, density=0.40)
runBMLGrid(grid, numSteps = 200, ifPlot=FALSE)
grid = createBMLGrid(r = 20, c = 127, density=0.45)
runBMLGrid(grid, numSteps = 200, ifPlot=FALSE)
grid = createBMLGrid(r = 10, c = 127, density=0.45)
runBMLGrid(grid, numSteps = 200, ifPlot=FALSE)
runBMLGrid(grid, numSteps = 200, ifPlot=TRUE)
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
grid = createBMLGrid(r = 10, c = 127, density=0.45)
runBMLGrid(grid, numSteps = 200, ifPlot=TRUE)
?dev.new
x11()
?x11
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
grid = createBMLGrid(r = 10, c = 127, density=0.45)
runBMLGrid(grid, numSteps = 20, ifPlot=TRUE)
grid = createBMLGrid(r = 80, c = 127, density=0.45)
runBMLGrid(grid, numSteps = 20, ifPlot=TRUE)
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
grid = createBMLGrid(r = 80, c = 127, density=0.45)
runBMLGrid(grid, numSteps = 20, ifPlot=TRUE)
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
grid = createBMLGrid(r = 80, c = 127, density=0.45)
runBMLGrid(grid, numSteps = 20, ifPlot=TRUE)
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
runBMLGrid(grid, numSteps = 20, ifPlot=TRUE)
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
grid = createBMLGrid(r = 80, c = 127, density=0.45)
plotBMLGrid(grid$grid)
runBMLGrid(grid, numSteps = 20, ifPlot=TRUE)
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
runBMLGrid(grid, numSteps = 20, ifPlot=TRUE)
runBMLGrid(grid, numSteps = 20, ifPlot=TRUE)
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
grid = createBMLGrid(r = 80, c = 127, density=0.45)
runBMLGrid(grid, numSteps = 20, ifPlot=TRUE)
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
grid = createBMLGrid(r = 80, c = 127, density=0.45)
runBMLGrid(grid, numSteps = 20, ifPlot=TRUE)
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
grid = createBMLGrid(r = 80, c = 127, density=0.45)
runBMLGrid(grid, numSteps = 20, ifPlot=TRUE)
runBMLGrid(grid, numSteps = 200, ifPlot=TRUE)
grid = createBMLGrid(r = 600, c = 127, density=0.45)
runBMLGrid(grid, numSteps = 200, ifPlot=TRUE)
grid = createBMLGrid(r = 400, c = 600, density=0.45)
runBMLGrid(grid, numSteps = 200, ifPlot=TRUE)
grid = createBMLGrid(r = 171, c = 213, density=0.45)
runBMLGrid(grid, numSteps = 200, ifPlot=TRUE)
grid = createBMLGrid(r = 100, c = 99, density=0.3)
system.time(runBMLGrid(grid, numSteps = 10000, ifPlot=FALSE))
system.time(runBMLGrid(grid, numSteps = 5000, ifPlot=FALSE))
system.time(runBMLGrid(grid, numSteps = 5000, ifPlot=FALSE))
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
system.time(runBMLGrid(grid, numSteps = 5000, ifPlot=FALSE))
system.time(runBMLGrid(grid, numSteps = 5000, ifPlot=FALSE))
system.time(runBMLGrid(grid, numSteps = 5000, ifPlot=FALSE))
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
system.time(runBMLGrid(grid, numSteps = 100, ifPlot=TRUE))
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
grid = createBMLGrid(r = 100, c = 99, density=0.3)
system.time(runBMLGrid(grid, numSteps = 100, ifPlot=TRUE))
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
system.time(runBMLGrid(grid, numSteps = 100, ifPlot=TRUE))
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
system.time(runBMLGrid(grid, numSteps = 100, ifPlot=TRUE))
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
system.time(runBMLGrid(grid, numSteps = 100, ifPlot=TRUE))
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
system.time(runBMLGrid(grid, numSteps = 100, ifPlot=TRUE))
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
system.time(runBMLGrid(grid, numSteps = 100, ifPlot=TRUE))
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
grid = createBMLGrid(r = 100, c = 99, density=0.3)
system.time(runBMLGrid(grid, numSteps = 100, ifPlot=TRUE))
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
grid = createBMLGrid(r = 100, c = 99, density=0.3)
plotBMLGrid(grid, ifadd = FALSE)
plot.BML(grid, ifadd = FALSE)
plot.BML(grid, ifadd = FALSE)
system.time(runBMLGrid(grid, numSteps = 100, ifPlot=TRUE))
aaa
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
grid = createBMLGrid(r = 100, c = 99, density=0.3)
plot.BML(grid, ifadd = FALSE)
system.time(runBMLGrid(grid, numSteps = 100, ifPlot=TRUE))
ls()
r
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
grid = createBMLGrid(r = 400, c = 600, density=0.5)
system.time(runBMLGrid(grid, numSteps = 100, ifPlot=TRUE))
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
grid = createBMLGrid(r = 400, c = 600, density=0.5)
plot.BML(grid, ifadd = FALSE)
system.time(runBMLGrid(grid, numSteps = 100, ifPlot=TRUE), ifSimultaneous = FALSE)
system.time(runBMLGrid(grid, numSteps = 100, ifPlot=TRUE))
grid = createBMLGrid(r = 89, c = 127, density=0.25)
dim(grid)
system.time(runBMLGrid(grid, numSteps = 100, ifPlot=TRUE))
system.time(runBMLGrid(grid, numSteps = 100, ifPlot=TRUE), ifSimultaneous = TRUE)
system.time(runBMLGrid(grid, numSteps = 100, ifPlot=TRUE, ifSimultaneous = TRUE))
ls()
moveBlue
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
grid = createBMLGrid(r = 89, c = 127, density=0.25)
system.time(runBMLGrid(grid, numSteps = 100, ifPlot=TRUE, ifSimultaneous = TRUE))
grid = createBMLGrid(r = 89, c = 127, density=0.3)
system.time(runBMLGrid(grid, numSteps = 100, ifPlot=TRUE))
system.time(runBMLGrid(grid, numSteps = 200, ifPlot=TRUE, ifSimultaneous = TRUE))
system.time(runBMLGrid(grid, numSteps = 1000, ifPlot=TRUE, ifSimultaneous = TRUE))
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
grid = createBMLGrid(r = 89, c = 127, density=0.3)
class(grid)
g = moveBlue.2(grid)
class(g)
g = moveBlue.2(grid)$grid
class(g)
which(g==2)
class(g)
class(which(g==2))
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
plot.BML(grid)
grid = createBMLGrid(r = 4, c = 6, density=0.5)
plot.BML(grid)
plot.BML(moveBlue.2(grid)$grid)
grid
moveBlue.2(grid)$grid
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
grid
moveBlue.2(grid)$grid
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
grid
moveBlue.2(grid)$grid
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
grid
moveRed.2(grid)$grid
grid = createBMLGrid(r = 4, c = 6, density=0.5)
system.time(runBMLGrid(grid, numSteps = 100, ifPlot=TRUE))
grid = createBMLGrid(r = 87, c = 127, density=0.5)
system.time(runBMLGrid(grid, numSteps = 100, ifPlot=TRUE))
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
grid = createBMLGrid(r = 4, c = 6, density=0.5)
grid
moveBlue.2(grid)$grid
grid
moveBlue.2(grid)$grid
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
grid = createBMLGrid(r = 4, c = 6, density=0.5)
grid
moveBlue.2(grid)$grid
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
grid = createBMLGrid(r = 4, c = 6, density=0.5)
grid
moveBlue.2(grid)$grid
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
grid
moveBlue.2(grid)$grid
grid = createBMLGrid(r = 87, c = 127, density=0.5)
system.time(runBMLGrid(grid, numSteps = 100, ifPlot=TRUE))
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
system.time(runBMLGrid(grid, numSteps = 100, ifPlot=TRUE))
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
system.time(runBMLGrid(grid, numSteps = 100, ifPlot=TRUE))
system.time(runBMLGrid(grid, numSteps = 10000, ifPlot=FALSE))
grid = createBMLGrid(r = 100, c = 99, density=0.3)
system.time(runBMLGrid(grid, numSteps = 10000, ifPlot=FALSE))
system.time(runBMLGrid(grid, numSteps = 5000, ifPlot=FALSE))
source('~/Google Drive/College/4th Year/3rd Q/STA 242/biham-middleton-levine-traffic-model/bml/R/BML functions.R')
dev.new
dev.new()
dev.off()
?dev.new
dev.new(noRStudioGD = T)
plot(1:10,1:10)
dev.new()
plot(1:10,1:10)
x11()
plot(1:10,1:10)
dev.off
dev.off()
plot(1:10,1:1100)
plot(1:1100,1:1100)
plot(1:1100,rep(5,1100))
plotGrid =
function(x)
{
image(x, col = c('white', 'red', 'blue'), axe = FALSE)
}
createGrid =
function(rowNum = 10, colNum = 6, rho = 0.3)
{
grid = integer(rowNum * colNum)
blueNum = redNum = rowNum * colNum * rho / 2
set.seed(1000)
pos = sample(x = rowNum * colNum, size = blueNum + redNum, replace = FALSE)
blueCars = pos[1:blueNum]
redCars = pos[-(1:blueNum)]
grid[redCars] = 1
grid[blueCars] = 2
myGrid = matrix(grid, nrow = rowNum, ncol = colNum, byrow = TRUE)
plotGrid(myGrid)
box()
return(list(grid = myGrid, bc = blueCars, rc = redCars))
}
rowNum = 10; colNum = 6; rho = 0.3;
n = rowNum * colNum
test = createGrid()
currentRedPos = test$rc
currentBluePos = test$bc
currentRedPos
currentRedPos + colNum
(currentRedPos + colNum) %% n
movetry %in% currentBluePos
movetry = (currentRedPos + colNum) %% n
movetry %in% currentBluePos
movetry = (currentRedPos + colNum) %% n
whereToMove = movetry %in% currentBluePos
move = (currentRedPos[!whereToMove] + colNum) %% n
currentRedPos[!whereToMove] = move
grid = integer(rowNum * colNum)
grid[currentRedPos] = 1
grid[currentBluePos] = 2
myGrid = matrix(grid, nrow = rowNum, ncol = colNum, byrow = TRUE)
plotGrid(myGrid)
box()
bmovetry = (currentBluePos + 1 -
(ceiling((currentBluePos + 1) / colNum) -
ceiling(currentBluePos / colNum)) * colNum) %% n
bwhereToMove = bmovetry %in% currentRedPos
move = (currentBluePos[!bwhereToMove] + 1 -
(ceiling((currentBluePos[!bwhereToMove] + 1) / colNum) -
ceiling(currentBluePos[!bwhereToMove] / colNum)) * colNum) %% n
currentBluePos[!bwhereToMove] = move
grid = integer(rowNum * colNum)
grid[currentRedPos] = 1
grid[currentBluePos] = 2
bmyGrid = matrix(grid, nrow = rowNum, ncol = colNum, byrow = TRUE)
plotGrid(bmyGrid)
box()
movetry = (currentRedPos + colNum) %% n
whereToMove = movetry %in% currentBluePos
move = (currentRedPos[!whereToMove] + colNum) %% n
currentRedPos[!whereToMove] = move
grid = integer(rowNum * colNum)
grid[currentRedPos] = 1
grid[currentBluePos] = 2
myGrid = matrix(grid, nrow = rowNum, ncol = colNum, byrow = TRUE)
plotGrid(myGrid)
box()
bmovetry = (currentBluePos + 1 -
(ceiling((currentBluePos + 1) / colNum) -
ceiling(currentBluePos / colNum)) * colNum) %% n
bwhereToMove = bmovetry %in% currentRedPos
move = (currentBluePos[!bwhereToMove] + 1 -
(ceiling((currentBluePos[!bwhereToMove] + 1) / colNum) -
ceiling(currentBluePos[!bwhereToMove] / colNum)) * colNum) %% n
currentBluePos[!bwhereToMove] = move
grid = integer(rowNum * colNum)
grid[currentRedPos] = 1
grid[currentBluePos] = 2
bmyGrid = matrix(grid, nrow = rowNum, ncol = colNum, byrow = TRUE)
plotGrid(bmyGrid)
box()
movetry = (currentRedPos + colNum) %% n
whereToMove = movetry %in% currentBluePos
move = (currentRedPos[!whereToMove] + colNum) %% n
currentRedPos[!whereToMove] = move
grid = integer(rowNum * colNum)
grid[currentRedPos] = 1
grid[currentBluePos] = 2
myGrid = matrix(grid, nrow = rowNum, ncol = colNum, byrow = TRUE)
plotGrid(myGrid)
box()
bmovetry = (currentBluePos + 1 -
(ceiling((currentBluePos + 1) / colNum) -
ceiling(currentBluePos / colNum)) * colNum) %% n
bwhereToMove = bmovetry %in% currentRedPos
move = (currentBluePos[!bwhereToMove] + 1 -
(ceiling((currentBluePos[!bwhereToMove] + 1) / colNum) -
ceiling(currentBluePos[!bwhereToMove] / colNum)) * colNum) %% n
currentBluePos[!bwhereToMove] = move
grid = integer(rowNum * colNum)
grid[currentRedPos] = 1
grid[currentBluePos] = 2
bmyGrid = matrix(grid, nrow = rowNum, ncol = colNum, byrow = TRUE)
plotGrid(bmyGrid)
box()
0.84134475
0.84134475-0.15865525
0.702^(1/3)
(0.99865010 - 0.00134990)^3
?qn
?normal
0.99865010 - 0.00134990
library("neuralnet")
?neuralnet
1e+05
as.numeric(1e+05)
1e+05-1
a = matrix(c(0,1,0,1),nrow=2)
a
a == 0
rowsum.data.frame(a==0)
rowsum(a==0)
a==0-1
a==0-2
a==0-3
a = matrix(c(0,1,0,NA),nrow=2)
a
is.na(a)
rowsum(is.na(a))
rowSums(a==0)
a = matrix(c(0,1,0,1),nrow=2)
a
a==1
a==0
if(1) print("hi")
rowSums(a==0)
rowSums(a==0)!=0
rowSums(a==0)==0
a[rowSums(a==0)==0, ]
d = read.table("https://smartsite.ucdavis.edu/access/content/group/429e24f0-eca2-4b27-a1b3-46a7cc30562b/Datasets/movies.txt", header=T)
d = read.table("~/Desktop/movies.txt", header=T)
head(d)
fit = lm(gross~score, data=d)
fit
dd = d[d$rating=="R", ]
head(dd)
fit = lm(gross~score, data=dd)
fit
residuals = fit$res
hist(residuals)
qqnorm(residuals)
qqline(residuals, col=2)
fit
summary(fit)
fit = lm(gross~score, data=d)
summary(fit)
fit = lm(gross~score, data=dd)
fit
summary(fit)
library(NLP)
library(openNLP)
library(RWeka)
version()
setwd("~/Google Drive/College/4th Year/3rd Q/STA 242/automated-essay-scoring/data/")
a = readLines("training_set_rel3.tsv")
header = strsplit(x=a[1], split = "\t")[[1]]
train = matrix(NA, nrow=length(a)-1, ncol=28)
train = as.data.frame(train)
train = matrix(NA, nrow=length(a)-1, ncol=28)
train = as.data.frame(train)
dim(train)
names(train)=header
names(train)
head(train)
for(i in 2:length(a)){
b = a[i]
Encoding (b) <- "latin1"
c = strsplit(x=b, split = "\t")[[1]]
train[(i-1), 1:length(c)] = c
}
train[1,]
class(train[1,27])
nchar(train[1,27])
head(which(is.na(train$essay_id)))
missings = sapply(1:ncol(train), function(i) length(which(is.na(train[,i]))))
missings
head(train)
save(train, file="training_set_rel3_20150605.rda")
# rater1 does not have the large score all the time, only 81% of the time
table(train$rater1_domain1 >= train$rater2_domain1)/nrow(train)
a = readLines("test_set.tsv")
header = strsplit(x=a[1], split = "\t")[[1]]
length(header)
header
a[2]
test = matrix(NA, nrow=length(a)-1, ncol=5)
test = as.data.frame(test)
dim(test)
names(test)=header
names(test)
head(test)
for(i in 2:length(a)){
b = a[i]
Encoding (b) <- "latin1"
c = strsplit(x=b, split = "\t")[[1]]
train[(i-1), 1:length(c)] = c
}
for(i in 2:length(a)){
b = a[i]
Encoding (b) <- "latin1"
c = strsplit(x=b, split = "\t")[[1]]
test[(i-1), 1:length(c)] = c
}
head(test)
missings = sapply(1:ncol(test), function(i) length(which(is.na(test[,i]))))
missings
head(test)
save(test, file="training_set_20150605.rda")
save(test, file="testing_set_20150605.rda")
